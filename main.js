(()=>{"use strict";var e=function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))},t=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Сохранить",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Сохранение...";t.textContent=e?r:n},n=function(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Сохранение...";n.preventDefault();var o=n.submitter,a=o.textContent;t(!0,o,a,r),e().then((function(){n.target.reset()})).catch((function(e){console.error("Ошибка: ".concat(e))})).finally((function(){t(!1,o,a)}))},r={baseUrl:"https://mesto.nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"25acbbe0-12c1-426d-be21-ec07addb3936","Content-Type":"application/json"}},o=function(t,n){return fetch("".concat(r.baseUrl,"/").concat(t),n).then(e)},a=function(e){return o("users/me/avatar",{method:"PATCH",headers:r.headers,body:JSON.stringify({avatar:e})})};function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var i,l=function(e){var t=e.cardData,n=e.userDataId,r=e.сallbackForRemove,o=e.сallbackForLike,a=e.сallbackForShowImage,i=document.querySelector("#card-template").content.cloneNode(!0),l=i.querySelector(".card__image"),u=i.querySelector(".card__like-count"),s=i.querySelector(".card__like-button"),d=i.querySelector(".card__delete-button");if(i.querySelector(".card__title").textContent=t.name,l.src=t.link,l.alt=t.name,t.likes.length){u.textContent=t.likes.length,u.classList.add("card__like-count_is-active");var f,m=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){l=!0,a=e},f:function(){try{i||null==n.return||n.return()}finally{if(l)throw a}}}}(t.likes);try{for(m.s();!(f=m.n()).done;)f.value._id===n&&s.classList.add("card__like-button_is-active")}catch(e){m.e(e)}finally{m.f()}}return t.owner._id!==n&&d.classList.add("card__delete-button_hidden"),l.addEventListener("click",(function(){a(t)})),d.addEventListener("click",(function(e){r(e,t)})),i.querySelector(".card__like-button").addEventListener("click",(function(e){o(e,t)})),i},u=function(e,t){var n;(n=t._id,o("cards/".concat(n),{method:"DELETE",headers:r.headers})).then((function(){e.target.closest(".card").remove()})).catch((function(e){console.log(e)}))},s=function(e,t){var n,a=e.target,c=e.target.closest(".card__like-block").querySelector(".card__like-count");a.classList.contains("card__like-button_is-active")?function(e){return o("cards/likes/".concat(e),{method:"DELETE",headers:r.headers})}(t._id).then((function(e){a.classList.remove("card__like-button_is-active"),e.likes.length?c.textContent=e.likes.length:c.classList.remove("card__like-count_is-active")})).catch((function(e){console.log(e)})):(n=t._id,o("cards/likes/".concat(n),{method:"PUT",headers:r.headers})).then((function(e){a.classList.add("card__like-button_is-active"),c.classList.add("card__like-count_is-active"),c.textContent=e.likes.length})).catch((function(e){console.log(e)}))},d=function(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",m)},f=function(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",m)},m=function(e){if("Escape"===e.key){var t=document.querySelector(".popup_is-opened");f(t)}},p=function(e,t,n){var r=e.querySelector(".".concat(t.name,"-error"));t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""},v=function(e,t){e.disabled=!0,e.classList.add(t.inactiveButtonClass)},y=function(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?function(e,t){e.disabled=!1,e.classList.remove(t.inactiveButtonClass)}(t,n):v(t,n)},_=document.querySelector(".places__list"),h=document.querySelector(".profile__title"),b=document.querySelector(".profile__description"),k=document.querySelector(".profile__image"),S=document.querySelectorAll(".popup"),g=document.querySelectorAll(".popup__close"),L=document.querySelector(".popup_type_edit"),E=document.querySelector(".profile__edit-button"),C=document.forms["edit-profile"],q=C.elements.name,A=C.elements.description,w=document.querySelector(".popup_type_change-avatar"),x=document.forms["new-avatar"],I=x.elements.link,D=document.querySelector(".popup_type_new-card"),F=document.querySelector(".profile__add-button"),j=document.forms["new-place"],T=j.elements["place-name"],O=j.elements.link,P=document.querySelector(".popup_type_image"),B=document.querySelector(".popup__image"),M=document.querySelector(".popup__caption"),R={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function U(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var N,H=function(e){d(P),B.src=e.link,B.alt=e.name,M.textContent=e.name};Promise.all([o("users/me",{headers:r.headers}),o("cards",{headers:r.headers})]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,c,i=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(i.push(r.value),i.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(c=n.return(),Object(c)!==c))return}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return U(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?U(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],a=r[1];i=o._id,h.textContent=o.name,b.textContent=o.about,k.setAttribute("style","background-image: url(".concat(o.avatar,");")),a.forEach((function(e){var t,n,r;n=(t={cardData:e,userDataId:i,сallbackForRemove:u,сallbackForLike:s,сallbackForShowImage:H}).cardData,r=l({cardData:n,userDataId:t.userDataId,сallbackForRemove:t.сallbackForRemove,сallbackForLike:t.сallbackForLike,сallbackForShowImage:t.сallbackForShowImage}),_.append(r)}))})).catch((function(e){console.log(e)})),g.forEach((function(e){e.addEventListener("click",(function(e){var t=e.target.closest(".popup");f(t)}))})),S.forEach((function(e){e.addEventListener("click",(function(t){!function(e,t){e.currentTarget===e.target&&f(t)}(t,e)}))})),E.addEventListener("click",(function(){var e,t,n,r;q.value=h.textContent,A.value=b.textContent,e=C,t=R,n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector),y(n,r,t),n.forEach((function(n){p(e,n,t)})),d(L)})),C.addEventListener("submit",(function(e){n((function(){return function(e,t){return o("users/me",{method:"PATCH",headers:r.headers,body:JSON.stringify({name:e,about:t})})}(q.value,A.value).then((function(e){h.textContent=e.name,b.textContent=e.about,f(L)}))}),e)})),F.addEventListener("click",(function(){d(D)})),j.addEventListener("submit",(function(e){n((function(){return(e=T.value,t=O.value,o("cards",{method:"POST",headers:r.headers,body:JSON.stringify({name:e,link:t})})).then((function(e){var t=l({cardData:e,userDataId:i,сallbackForRemove:u,сallbackForLike:s,сallbackForShowImage:H});_.prepend(t),f(D)}));var e,t}),e)})),k.addEventListener("click",(function(){d(w)})),x.addEventListener("submit",(function(e){n((function(){return Promise.all([(e=I.value,fetch("".concat(e),{method:"HEAD"}).then((function(e){if(!e.ok&&!e.headers.get("Content-Type").includes("image"))return Promise.reject("Ошибка: ".concat(e.status))}))),a(I.value)]).then((function(e){var t=e[1];k.setAttribute("style","background-image: url(".concat(t.avatar,");")),f(w)}));var e}),e)})),N=R,Array.from(document.querySelectorAll(N.formSelector)).forEach((function(e){e.addEventListener("submit",(function(e){e.preventDefault()})),function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);y(n,r,t),e.addEventListener("reset",(function(){v(r,t)})),n.forEach((function(o){o.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?p(e,t,n):function(e,t,n,r){var o=e.querySelector(".".concat(t.name,"-error"));t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}(e,t,t.validationMessage,n)}(e,o,t),y(n,r,t)}))}))}(e,N)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var e={baseUrl:"https://mesto.nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"25acbbe0-12c1-426d-be21-ec07addb3936","Content-Type":"application/json"}},t=function(){return fetch("".concat(e.baseUrl,"/users/me"),{headers:e.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))},n=function(t){return fetch("".concat(e.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:e.headers,body:JSON.stringify({avatar:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))},r=function(t){return fetch("".concat(e.baseUrl,"/cards"),{method:"POST",headers:e.headers,body:JSON.stringify({name:t.name,link:t.link})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))};function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var c=function(e,t,n,r,c){var a=document.querySelector("#card-template").content.cloneNode(!0);if(a.querySelector(".card__title").textContent=e.name,a.querySelector(".card__image").src=e.link,a.querySelector(".card__image").alt=e.name,e.likes.length){a.querySelector(".card__like-count").textContent=e.likes.length,a.querySelector(".card__like-count").classList.add("card__like-count_is-active");var i,u=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,c=function(){};return{s:c,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:c}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==n.return||n.return()}finally{if(u)throw a}}}}(e.likes);try{for(u.s();!(i=u.n()).done;)i.value._id===t._id&&a.querySelector(".card__like-button").classList.add("card__like-button_is-active")}catch(e){u.e(e)}finally{u.f()}}return e.owner._id!==t._id&&a.querySelector(".card__delete-button").classList.add("card__delete-button_hidden"),a.querySelector(".card__image").addEventListener("click",(function(){c(e)})),a.querySelector(".card__delete-button").addEventListener("click",(function(t){n(t,e)})),a.querySelector(".card__like-button").addEventListener("click",(function(t){r(t,e)})),a},a=function(t,n){var r,o=t.target,c=t.target.closest(".card__like-block").querySelector(".card__like-count");o.classList.contains("card__like-button_is-active")?function(t){return fetch("".concat(e.baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:e.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}(n._id).then((function(e){o.classList.remove("card__like-button_is-active"),e.likes.length?c.textContent=e.likes.length:c.classList.remove("card__like-count_is-active")})):(r=n._id,fetch("".concat(e.baseUrl,"/cards/likes/").concat(r),{method:"PUT",headers:e.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(e){o.classList.add("card__like-button_is-active"),c.classList.add("card__like-count_is-active"),c.textContent=e.likes.length})).catch((function(e){console.log(e)}))},i=function(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",l)},u=function(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",l)},l=function(e){if("Escape"===e.key){var t=document.querySelector(".popup_is-opened");u(t)}},s=function(e,t,n){var r=e.querySelector(".".concat(t.name,"-error"));t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""},d=function(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.disabled=!1,t.classList.remove(n.inactiveButtonClass)):(t.disabled=!0,t.classList.add(n.inactiveButtonClass))},f=function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);d(n,r,t),n.forEach((function(n){s(e,n,t)}))};function p(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c,a,i=[],u=!0,l=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=c.call(n)).done)&&(i.push(r.value),i.length!==t);u=!0);}catch(e){l=!0,o=e}finally{try{if(!u&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return m(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?m(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var _,y=document.querySelector(".places__list"),v=document.querySelector(".profile__title"),h=document.querySelector(".profile__description"),b=document.querySelector(".profile__image"),S=document.querySelectorAll(".popup"),k=document.querySelectorAll(".popup__close"),g=document.querySelector(".popup_type_edit"),q=document.querySelector(".profile__edit-button"),E=document.forms["edit-profile"],L=E.elements.name,C=E.elements.description,j=document.querySelector(".popup_type_change-avatar"),A=document.forms["new-avatar"],w=A.elements.link,x=document.querySelector(".popup_type_new-card"),P=document.querySelector(".profile__add-button"),U=document.forms["new-place"],T=U.elements["place-name"],O=U.elements.link,D=document.querySelector(".popup_type_delete-card"),B=document.querySelector(".popup_type_image"),I=document.querySelector(".popup__image"),M=document.querySelector(".popup__caption"),N={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},H=function(e,t){e.querySelector(".popup__button").textContent=t?"Сохранение...":"Сохранить"},J=function(t,n){var r=D.querySelector(".popup__button");i(D),r.addEventListener("click",(function(){var r;u(D),(r=n._id,fetch("".concat(e.baseUrl,"/cards/").concat(r),{method:"DELETE",headers:e.headers}).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status))}))).then((function(){t.target.closest(".card").remove()})).catch((function(e){console.log(e)}))}))},V=function(e){i(B),I.src=e.link,I.alt=e.name,M.textContent=e.name};t().then((function(e){v.textContent=e.name,h.textContent=e.about,b.setAttribute("style","background-image: url(".concat(e.avatar,");"))})).catch((function(e){console.log(e)})),Promise.all([t(),fetch("".concat(e.baseUrl,"/cards"),{headers:e.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))]).then((function(e){var t=p(e,2),n=t[0];t[1].forEach((function(e){!function(e,t,n,r,o){var a=c(e,t,n,r,o);y.append(a)}(e,n,J,a,V)}))})).catch((function(e){console.log(e)})),k.forEach((function(e){e.addEventListener("click",(function(e){var t=e.target.closest(".popup");u(t)}))})),S.forEach((function(e){e.addEventListener("click",(function(t){!function(e,t){e.currentTarget===e.target&&u(t)}(t,e)}))})),q.addEventListener("click",(function(){L.value=v.textContent,C.value=h.textContent,f(E,N),i(g)})),E.addEventListener("submit",(function(t){t.preventDefault();var n={name:L.value,about:C.value};H(g,!0),function(t){return fetch("".concat(e.baseUrl,"/users/me"),{method:"PATCH",headers:e.headers,body:JSON.stringify({name:t.name,about:t.about})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}(n).then((function(e){v.textContent=e.name,h.textContent=e.about,u(g)})).catch((function(e){console.log(e)})).finally((function(){H(g,!1)}))})),P.addEventListener("click",(function(){i(x)})),U.addEventListener("submit",(function(e){e.preventDefault();var n={name:T.value,link:O.value};H(x,!0),Promise.all([t(),r(n)]).then((function(e){var t=p(e,2),n=t[0],r=t[1],o=c(r,n,J,a,V);y.prepend(o),u(x),U.reset(),f(U,N)})).catch((function(e){console.log(e)})).finally((function(){H(x,!1)}))})),b.addEventListener("click",(function(){i(j)})),A.addEventListener("submit",(function(e){var t;e.preventDefault(),H(j,!0),Promise.all([(t=w.value,fetch("".concat(t),{method:"HEAD"}).then((function(e){if(!e.headers.get("Content-Type").includes("image"))return Promise.reject("Ошибка: ".concat(e.status))}))),n(w.value)]).then((function(e){var t=e[1];b.setAttribute("style","background-image: url(".concat(t.avatar,");")),u(j),A.reset(),f(A,N)})).catch((function(e){console.log(e)})).finally((function(){H(j,!1)}))})),_=N,Array.from(document.querySelectorAll(_.formSelector)).forEach((function(e){e.addEventListener("submit",(function(e){e.preventDefault()})),function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);d(n,r,t),n.forEach((function(o){o.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?s(e,t,n):function(e,t,n,r){var o=e.querySelector(".".concat(t.name,"-error"));t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}(e,t,t.validationMessage,n)}(e,o,t),d(n,r,t)}))}))}(e,_)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,